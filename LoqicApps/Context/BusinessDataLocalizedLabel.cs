//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace CrmEarlyBound
{
	
	/// <summary>
	/// Business Data Localized Label
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("businessdatalocalizedlabel")]
	public partial class BusinessDataLocalizedLabel : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public static class Fields
		{
			public const string BusinessDataLocalizedLabelId = "businessdatalocalizedlabelid";
			public const string Id = "businessdatalocalizedlabelid";
			public const string Label = "label";
			public const string LanguageId = "languageid";
			public const string ObjectColumnName = "objectcolumnname";
			public const string ObjectColumnNumber = "objectcolumnnumber";
			public const string ObjectId = "objectid";
			public const string VersionNumber = "versionnumber";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public BusinessDataLocalizedLabel() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "businessdatalocalizedlabel";
		
		public const string EntitySchemaName = "BusinessDataLocalizedLabel";
		
		public const string PrimaryIdAttribute = "businessdatalocalizedlabelid";
		
		public const string EntityLogicalCollectionName = "businessdatalocalizedlabels";
		
		public const string EntitySetName = "businessdatalocalizedlabels";
		
		public const int EntityTypeCode = 4232;
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Unique identifier of the Business Data Localized Label.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("businessdatalocalizedlabelid")]
		public System.Nullable<System.Guid> BusinessDataLocalizedLabelId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("businessdatalocalizedlabelid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("BusinessDataLocalizedLabelId");
				this.SetAttributeValue("businessdatalocalizedlabelid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("BusinessDataLocalizedLabelId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("businessdatalocalizedlabelid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.BusinessDataLocalizedLabelId = value;
			}
		}
		
		/// <summary>
		/// Label
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("label")]
		public string Label
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("label");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Label");
				this.SetAttributeValue("label", value);
				this.OnPropertyChanged("Label");
			}
		}
		
		/// <summary>
		/// Language Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("languageid")]
		public System.Nullable<int> LanguageId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("languageid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("LanguageId");
				this.SetAttributeValue("languageid", value);
				this.OnPropertyChanged("LanguageId");
			}
		}
		
		/// <summary>
		/// Object Column Name
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("objectcolumnname")]
		public string ObjectColumnName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("objectcolumnname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ObjectColumnName");
				this.SetAttributeValue("objectcolumnname", value);
				this.OnPropertyChanged("ObjectColumnName");
			}
		}
		
		/// <summary>
		/// Object Column Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("objectcolumnnumber")]
		public System.Nullable<int> ObjectColumnNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("objectcolumnnumber");
			}
		}
		
		/// <summary>
		/// Object Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("objectid")]
		public Microsoft.Xrm.Sdk.EntityReference ObjectId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("objectid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ObjectId");
				this.SetAttributeValue("objectid", value);
				this.OnPropertyChanged("ObjectId");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N BusinessDataLocalizedLabel_SyncErrors
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("BusinessDataLocalizedLabel_SyncErrors")]
		public System.Collections.Generic.IEnumerable<CrmEarlyBound.SyncError> BusinessDataLocalizedLabel_SyncErrors
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<CrmEarlyBound.SyncError>("BusinessDataLocalizedLabel_SyncErrors", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("BusinessDataLocalizedLabel_SyncErrors");
				this.SetRelatedEntities<CrmEarlyBound.SyncError>("BusinessDataLocalizedLabel_SyncErrors", null, value);
				this.OnPropertyChanged("BusinessDataLocalizedLabel_SyncErrors");
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public BusinessDataLocalizedLabel(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["businessdatalocalizedlabelid"] = base.Id;
                        break;
                    case "businessdatalocalizedlabelid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}