//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace CrmEarlyBound
{
	
	/// <summary>
	/// Stores mapping attributes for business units.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("businessunitmap")]
	public partial class BusinessUnitMap : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public static class Fields
		{
			public const string BusinessId = "businessid";
			public const string BusinessUnitMapId = "businessunitmapid";
			public const string Id = "businessunitmapid";
			public const string SubBusinessId = "subbusinessid";
			public const string VersionNumber = "versionnumber";
			public const string bizmap_businessid_businessunit = "bizmap_businessid_businessunit";
			public const string bizmap_subbusinessid_businessunit = "bizmap_subbusinessid_businessunit";
			public const string bizmap_systemuser_businessid = "bizmap_systemuser_businessid";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public BusinessUnitMap() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "businessunitmap";
		
		public const string EntitySchemaName = "BusinessUnitMap";
		
		public const string PrimaryIdAttribute = "businessunitmapid";
		
		public const string EntityLogicalCollectionName = "businessunitmaps";
		
		public const string EntitySetName = "businessunitmaps";
		
		public const int EntityTypeCode = 6;
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("businessid")]
		public System.Nullable<System.Guid> BusinessId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("businessid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("BusinessId");
				this.SetAttributeValue("businessid", value);
				this.OnPropertyChanged("BusinessId");
			}
		}
		
		/// <summary>
		/// Unique identifier of the business unit.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("businessunitmapid")]
		public System.Nullable<System.Guid> BusinessUnitMapId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("businessunitmapid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("BusinessUnitMapId");
				this.SetAttributeValue("businessunitmapid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("BusinessUnitMapId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("businessunitmapid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.BusinessUnitMapId = value;
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subbusinessid")]
		public System.Nullable<System.Guid> SubBusinessId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("subbusinessid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("SubBusinessId");
				this.SetAttributeValue("subbusinessid", value);
				this.OnPropertyChanged("SubBusinessId");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N userentityinstancedata_businessunitmap
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("userentityinstancedata_businessunitmap")]
		public System.Collections.Generic.IEnumerable<CrmEarlyBound.UserEntityInstanceData> userentityinstancedata_businessunitmap
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<CrmEarlyBound.UserEntityInstanceData>("userentityinstancedata_businessunitmap", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("userentityinstancedata_businessunitmap");
				this.SetRelatedEntities<CrmEarlyBound.UserEntityInstanceData>("userentityinstancedata_businessunitmap", null, value);
				this.OnPropertyChanged("userentityinstancedata_businessunitmap");
			}
		}
		
		/// <summary>
		/// N:1 bizmap_businessid_businessunit
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("businessid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("bizmap_businessid_businessunit")]
		public CrmEarlyBound.BusinessUnit bizmap_businessid_businessunit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<CrmEarlyBound.BusinessUnit>("bizmap_businessid_businessunit", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("bizmap_businessid_businessunit");
				this.SetRelatedEntity<CrmEarlyBound.BusinessUnit>("bizmap_businessid_businessunit", null, value);
				this.OnPropertyChanged("bizmap_businessid_businessunit");
			}
		}
		
		/// <summary>
		/// N:1 bizmap_subbusinessid_businessunit
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("subbusinessid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("bizmap_subbusinessid_businessunit")]
		public CrmEarlyBound.BusinessUnit bizmap_subbusinessid_businessunit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<CrmEarlyBound.BusinessUnit>("bizmap_subbusinessid_businessunit", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("bizmap_subbusinessid_businessunit");
				this.SetRelatedEntity<CrmEarlyBound.BusinessUnit>("bizmap_subbusinessid_businessunit", null, value);
				this.OnPropertyChanged("bizmap_subbusinessid_businessunit");
			}
		}
		
		/// <summary>
		/// N:1 bizmap_systemuser_businessid
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("businessid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("bizmap_systemuser_businessid")]
		public CrmEarlyBound.SystemUser bizmap_systemuser_businessid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<CrmEarlyBound.SystemUser>("bizmap_systemuser_businessid", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("bizmap_systemuser_businessid");
				this.SetRelatedEntity<CrmEarlyBound.SystemUser>("bizmap_systemuser_businessid", null, value);
				this.OnPropertyChanged("bizmap_systemuser_businessid");
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public BusinessUnitMap(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["businessunitmapid"] = base.Id;
                        break;
                    case "businessunitmapid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}