//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace CrmEarlyBound
{
	
	/// <summary>
	/// Form Level dependencies in CRM.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("runtimedependency")]
	public partial class RuntimeDependency : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public static class Fields
		{
			public const string CreatedTime = "createdtime";
			public const string DependencyId = "dependencyid";
			public const string Id = "dependencyid";
			public const string DependentComponentNodeId = "dependentcomponentnodeid";
			public const string DependentComponentType = "dependentcomponenttype";
			public const string IsPublished = "ispublished";
			public const string RequiredComponentModifiedTime = "requiredcomponentmodifiedtime";
			public const string RequiredComponentNodeId = "requiredcomponentnodeid";
			public const string RequiredComponentType = "requiredcomponenttype";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public RuntimeDependency() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "runtimedependency";
		
		public const string EntitySchemaName = "RuntimeDependency";
		
		public const string PrimaryIdAttribute = "dependencyid";
		
		public const string EntityLogicalCollectionName = "runtimedependencies";
		
		public const string EntitySetName = "runtimedependencies";
		
		public const int EntityTypeCode = 7200;
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdtime")]
		public System.Nullable<System.DateTime> CreatedTime
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdtime");
			}
		}
		
		/// <summary>
		/// Unique identifier of a dependency.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dependencyid")]
		public System.Nullable<System.Guid> DependencyId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("dependencyid");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dependencyid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				base.Id = value;
			}
		}
		
		/// <summary>
		/// Unique identifier of the dependent component's node.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dependentcomponentnodeid")]
		public System.Nullable<System.Guid> DependentComponentNodeId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("dependentcomponentnodeid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("DependentComponentNodeId");
				this.SetAttributeValue("dependentcomponentnodeid", value);
				this.OnPropertyChanged("DependentComponentNodeId");
			}
		}
		
		/// <summary>
		/// Dependent Component Node Type
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("dependentcomponenttype")]
		public System.Nullable<int> DependentComponentType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("dependentcomponenttype");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("DependentComponentType");
				this.SetAttributeValue("dependentcomponenttype", value);
				this.OnPropertyChanged("DependentComponentType");
			}
		}
		
		/// <summary>
		/// Determines whether required component is published
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ispublished")]
		public Microsoft.Xrm.Sdk.BooleanManagedProperty IsPublished
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.BooleanManagedProperty>("ispublished");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("IsPublished");
				this.SetAttributeValue("ispublished", value);
				this.OnPropertyChanged("IsPublished");
			}
		}
		
		/// <summary>
		/// Date and time when the required component was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("requiredcomponentmodifiedtime")]
		public System.Nullable<System.DateTime> RequiredComponentModifiedTime
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("requiredcomponentmodifiedtime");
			}
		}
		
		/// <summary>
		/// Unique identifier of the required component's node
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("requiredcomponentnodeid")]
		public string RequiredComponentNodeId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("requiredcomponentnodeid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RequiredComponentNodeId");
				this.SetAttributeValue("requiredcomponentnodeid", value);
				this.OnPropertyChanged("RequiredComponentNodeId");
			}
		}
		
		/// <summary>
		/// Required Component Node Type
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("requiredcomponenttype")]
		public System.Nullable<int> RequiredComponentType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("requiredcomponenttype");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RequiredComponentType");
				this.SetAttributeValue("requiredcomponenttype", value);
				this.OnPropertyChanged("RequiredComponentType");
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public RuntimeDependency(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["dependencyid"] = base.Id;
                        break;
                    case "dependencyid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}