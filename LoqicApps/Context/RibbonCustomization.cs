//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace CrmEarlyBound
{
	
	/// <summary>
	/// Ribbon customizations for the application ribbon and entity ribbon templates.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("ribboncustomization")]
	public partial class RibbonCustomization : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public static class Fields
		{
			public const string ComponentState = "componentstate";
			public const string Entity = "entity";
			public const string IsManaged = "ismanaged";
			public const string OrganizationId = "organizationid";
			public const string OverwriteTime = "overwritetime";
			public const string PublishedOn = "publishedon";
			public const string RibbonCustomizationId = "ribboncustomizationid";
			public const string Id = "ribboncustomizationid";
			public const string RibbonCustomizationUniqueId = "ribboncustomizationuniqueid";
			public const string SolutionId = "solutionid";
			public const string VersionNumber = "versionnumber";
			public const string organization_ribbon_customization = "organization_ribbon_customization";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public RibbonCustomization() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "ribboncustomization";
		
		public const string EntitySchemaName = "RibbonCustomization";
		
		public const string PrimaryIdAttribute = "ribboncustomizationid";
		
		public const string EntityLogicalCollectionName = "ribboncustomizations";
		
		public const string EntitySetName = "ribboncustomizations";
		
		public const int EntityTypeCode = 1120;
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentstate")]
		public virtual ComponentState? ComponentState
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ComponentState?)(EntityOptionSetEnum.GetEnum(this, "componentstate")));
			}
		}
		
		/// <summary>
		/// Specifies which entity's ribbons this customization applies to. If null, then the customizations apply to the global ribbons.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entity")]
		public string Entity
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("entity");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Entity");
				this.SetAttributeValue("entity", value);
				this.OnPropertyChanged("Entity");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ismanaged")]
		public System.Nullable<bool> IsManaged
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("ismanaged");
			}
		}
		
		/// <summary>
		/// Unique identifier of the organization.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		public Microsoft.Xrm.Sdk.EntityReference OrganizationId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("organizationid");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overwritetime")]
		public System.Nullable<System.DateTime> OverwriteTime
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overwritetime");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("publishedon")]
		public System.Nullable<System.DateTime> PublishedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("publishedon");
			}
		}
		
		/// <summary>
		/// Unique identifier.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ribboncustomizationid")]
		public System.Nullable<System.Guid> RibbonCustomizationId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("ribboncustomizationid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RibbonCustomizationId");
				this.SetAttributeValue("ribboncustomizationid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("RibbonCustomizationId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ribboncustomizationid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.RibbonCustomizationId = value;
			}
		}
		
		/// <summary>
		/// Unique identifier for this row.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ribboncustomizationuniqueid")]
		public System.Nullable<System.Guid> RibbonCustomizationUniqueId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("ribboncustomizationuniqueid");
			}
		}
		
		/// <summary>
		/// Unique identifier of the associated solution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("solutionid")]
		public System.Nullable<System.Guid> SolutionId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("solutionid");
			}
		}
		
		/// <summary>
		/// Represents a version of customizations to be synchronized with the Microsoft Dynamics 365 client for Outlook.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N RibbonCustomization_RibbonCommand
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("RibbonCustomization_RibbonCommand")]
		public System.Collections.Generic.IEnumerable<CrmEarlyBound.RibbonCommand> RibbonCustomization_RibbonCommand
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<CrmEarlyBound.RibbonCommand>("RibbonCustomization_RibbonCommand", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RibbonCustomization_RibbonCommand");
				this.SetRelatedEntities<CrmEarlyBound.RibbonCommand>("RibbonCustomization_RibbonCommand", null, value);
				this.OnPropertyChanged("RibbonCustomization_RibbonCommand");
			}
		}
		
		/// <summary>
		/// 1:N RibbonCustomization_RibbonContextGroup
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("RibbonCustomization_RibbonContextGroup")]
		public System.Collections.Generic.IEnumerable<CrmEarlyBound.RibbonContextGroup> RibbonCustomization_RibbonContextGroup
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<CrmEarlyBound.RibbonContextGroup>("RibbonCustomization_RibbonContextGroup", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RibbonCustomization_RibbonContextGroup");
				this.SetRelatedEntities<CrmEarlyBound.RibbonContextGroup>("RibbonCustomization_RibbonContextGroup", null, value);
				this.OnPropertyChanged("RibbonCustomization_RibbonContextGroup");
			}
		}
		
		/// <summary>
		/// 1:N RibbonCustomization_RibbonDiff
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("RibbonCustomization_RibbonDiff")]
		public System.Collections.Generic.IEnumerable<CrmEarlyBound.RibbonDiff> RibbonCustomization_RibbonDiff
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<CrmEarlyBound.RibbonDiff>("RibbonCustomization_RibbonDiff", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RibbonCustomization_RibbonDiff");
				this.SetRelatedEntities<CrmEarlyBound.RibbonDiff>("RibbonCustomization_RibbonDiff", null, value);
				this.OnPropertyChanged("RibbonCustomization_RibbonDiff");
			}
		}
		
		/// <summary>
		/// 1:N RibbonCustomization_RibbonRule
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("RibbonCustomization_RibbonRule")]
		public System.Collections.Generic.IEnumerable<CrmEarlyBound.RibbonRule> RibbonCustomization_RibbonRule
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<CrmEarlyBound.RibbonRule>("RibbonCustomization_RibbonRule", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RibbonCustomization_RibbonRule");
				this.SetRelatedEntities<CrmEarlyBound.RibbonRule>("RibbonCustomization_RibbonRule", null, value);
				this.OnPropertyChanged("RibbonCustomization_RibbonRule");
			}
		}
		
		/// <summary>
		/// 1:N userentityinstancedata_ribboncustomization
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("userentityinstancedata_ribboncustomization")]
		public System.Collections.Generic.IEnumerable<CrmEarlyBound.UserEntityInstanceData> userentityinstancedata_ribboncustomization
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<CrmEarlyBound.UserEntityInstanceData>("userentityinstancedata_ribboncustomization", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("userentityinstancedata_ribboncustomization");
				this.SetRelatedEntities<CrmEarlyBound.UserEntityInstanceData>("userentityinstancedata_ribboncustomization", null, value);
				this.OnPropertyChanged("userentityinstancedata_ribboncustomization");
			}
		}
		
		/// <summary>
		/// N:1 organization_ribbon_customization
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("organizationid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("organization_ribbon_customization")]
		public CrmEarlyBound.Organization organization_ribbon_customization
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<CrmEarlyBound.Organization>("organization_ribbon_customization", null);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public RibbonCustomization(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["ribboncustomizationid"] = base.Id;
                        break;
                    case "ribboncustomizationid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}