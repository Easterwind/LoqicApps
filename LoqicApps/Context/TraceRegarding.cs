//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace CrmEarlyBound
{
	
	/// <summary>
	/// Represents which object a trace record is regarding. For internal use only.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("traceregarding")]
	public partial class TraceRegarding : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public static class Fields
		{
			public const string RegardingObjectId = "regardingobjectid";
			public const string RegardingObjectOwnerId = "regardingobjectownerid";
			public const string RegardingObjectOwningBusinessUnit = "regardingobjectowningbusinessunit";
			public const string RegardingObjectTypeCodeForSharing = "regardingobjecttypecodeforsharing";
			public const string TraceRegardingId = "traceregardingid";
			public const string Id = "traceregardingid";
			public const string business_unit_TraceRegarding = "business_unit_TraceRegarding";
			public const string emailServerProfile_TraceRegardings = "emailServerProfile_TraceRegardings";
			public const string mailbox_TraceRegardings = "mailbox_TraceRegardings";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public TraceRegarding() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "traceregarding";
		
		public const string EntitySchemaName = "TraceRegarding";
		
		public const string PrimaryIdAttribute = "traceregardingid";
		
		public const string EntityLogicalCollectionName = "traceregardings";
		
		public const string EntitySetName = "traceregardings";
		
		public const int EntityTypeCode = 8052;
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Unique identifier of the regarding object.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		public Microsoft.Xrm.Sdk.EntityReference RegardingObjectId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("regardingobjectid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RegardingObjectId");
				this.SetAttributeValue("regardingobjectid", value);
				this.OnPropertyChanged("RegardingObjectId");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user or team who owns the regarding object.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectownerid")]
		public Microsoft.Xrm.Sdk.EntityReference RegardingObjectOwnerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("regardingobjectownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("RegardingObjectOwnerId");
				this.SetAttributeValue("regardingobjectownerid", value);
				this.OnPropertyChanged("RegardingObjectOwnerId");
			}
		}
		
		/// <summary>
		/// Unique identifier of the business unit that owns the regarding object.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectowningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference RegardingObjectOwningBusinessUnit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("regardingobjectowningbusinessunit");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjecttypecodeforsharing")]
		public string RegardingObjectTypeCodeForSharing
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("regardingobjecttypecodeforsharing");
			}
		}
		
		/// <summary>
		/// Unique identifier of the trace-regarding record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("traceregardingid")]
		public System.Nullable<System.Guid> TraceRegardingId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("traceregardingid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TraceRegardingId");
				this.SetAttributeValue("traceregardingid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("TraceRegardingId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("traceregardingid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.TraceRegardingId = value;
			}
		}
		
		/// <summary>
		/// 1:N tracelog_TraceRegardings
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("tracelog_TraceRegardings")]
		public System.Collections.Generic.IEnumerable<CrmEarlyBound.TraceLog> tracelog_TraceRegardings
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<CrmEarlyBound.TraceLog>("tracelog_TraceRegardings", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("tracelog_TraceRegardings");
				this.SetRelatedEntities<CrmEarlyBound.TraceLog>("tracelog_TraceRegardings", null, value);
				this.OnPropertyChanged("tracelog_TraceRegardings");
			}
		}
		
		/// <summary>
		/// N:1 business_unit_TraceRegarding
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectowningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_TraceRegarding")]
		public CrmEarlyBound.BusinessUnit business_unit_TraceRegarding
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<CrmEarlyBound.BusinessUnit>("business_unit_TraceRegarding", null);
			}
		}
		
		/// <summary>
		/// N:1 emailServerProfile_TraceRegardings
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("emailServerProfile_TraceRegardings")]
		public CrmEarlyBound.EmailServerProfile emailServerProfile_TraceRegardings
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<CrmEarlyBound.EmailServerProfile>("emailServerProfile_TraceRegardings", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("emailServerProfile_TraceRegardings");
				this.SetRelatedEntity<CrmEarlyBound.EmailServerProfile>("emailServerProfile_TraceRegardings", null, value);
				this.OnPropertyChanged("emailServerProfile_TraceRegardings");
			}
		}
		
		/// <summary>
		/// N:1 mailbox_TraceRegardings
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("regardingobjectid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("mailbox_TraceRegardings")]
		public CrmEarlyBound.Mailbox mailbox_TraceRegardings
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<CrmEarlyBound.Mailbox>("mailbox_TraceRegardings", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("mailbox_TraceRegardings");
				this.SetRelatedEntity<CrmEarlyBound.Mailbox>("mailbox_TraceRegardings", null, value);
				this.OnPropertyChanged("mailbox_TraceRegardings");
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public TraceRegarding(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["traceregardingid"] = base.Id;
                        break;
                    case "traceregardingid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}