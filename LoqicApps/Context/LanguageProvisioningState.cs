//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace CrmEarlyBound
{
	
	/// <summary>
	/// Container for language provisioning checkpoint states
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("languageprovisioningstate")]
	public partial class LanguageProvisioningState : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public static class Fields
		{
			public const string ApplicationVersion = "applicationversion";
			public const string LanguageId = "languageid";
			public const string LanguageProvisioningStateId = "languageprovisioningstateid";
			public const string Id = "languageprovisioningstateid";
			public const string ProvisioningStage = "provisioningstage";
			public const string SolutionFileVersion = "solutionfileversion";
			public const string SolutionUniqueName = "solutionuniquename";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public LanguageProvisioningState() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "languageprovisioningstate";
		
		public const string EntitySchemaName = "LanguageProvisioningState";
		
		public const string PrimaryIdAttribute = "languageprovisioningstateid";
		
		public const string EntityLogicalCollectionName = "languageprovisioningstates";
		
		public const string EntitySetName = "languageprovisioningstates";
		
		public const int EntityTypeCode = 9875;
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Application Version
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("applicationversion")]
		public string ApplicationVersion
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("applicationversion");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ApplicationVersion");
				this.SetAttributeValue("applicationversion", value);
				this.OnPropertyChanged("ApplicationVersion");
			}
		}
		
		/// <summary>
		/// Language Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("languageid")]
		public System.Nullable<int> LanguageId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("languageid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("LanguageId");
				this.SetAttributeValue("languageid", value);
				this.OnPropertyChanged("LanguageId");
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("languageprovisioningstateid")]
		public System.Nullable<System.Guid> LanguageProvisioningStateId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("languageprovisioningstateid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("LanguageProvisioningStateId");
				this.SetAttributeValue("languageprovisioningstateid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("LanguageProvisioningStateId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("languageprovisioningstateid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.LanguageProvisioningStateId = value;
			}
		}
		
		/// <summary>
		/// Provisioning Stage
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("provisioningstage")]
		public virtual LanguageProvisioningState_ProvisioningStage? ProvisioningStage
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((LanguageProvisioningState_ProvisioningStage?)(EntityOptionSetEnum.GetEnum(this, "provisioningstage")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ProvisioningStage");
				this.SetAttributeValue("provisioningstage", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("ProvisioningStage");
			}
		}
		
		/// <summary>
		/// Solution File Version
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("solutionfileversion")]
		public string SolutionFileVersion
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("solutionfileversion");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("SolutionFileVersion");
				this.SetAttributeValue("solutionfileversion", value);
				this.OnPropertyChanged("SolutionFileVersion");
			}
		}
		
		/// <summary>
		/// Solution Unique Name
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("solutionuniquename")]
		public string SolutionUniqueName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("solutionuniquename");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("SolutionUniqueName");
				this.SetAttributeValue("solutionuniquename", value);
				this.OnPropertyChanged("SolutionUniqueName");
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public LanguageProvisioningState(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["languageprovisioningstateid"] = base.Id;
                        break;
                    case "languageprovisioningstateid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}