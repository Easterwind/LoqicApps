//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace CrmEarlyBound
{
	
	/// <summary>
	/// 
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("entity")]
	public partial class Entity_Ent : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public static class Fields
		{
			public const string AddressTableName = "addresstablename";
			public const string BaseTableName = "basetablename";
			public const string CollectionName = "collectionname";
			public const string ComponentState = "componentstate";
			public const string EntityId = "entityid";
			public const string Id = "entityid";
			public const string EntitySetName1 = "entitysetname";
			public const string ExtensionTableName = "extensiontablename";
			public const string ExternalCollectionName = "externalcollectionname";
			public const string ExternalName = "externalname";
			public const string IsActivity = "isactivity";
			public const string LogicalCollectionName = "logicalcollectionname";
			public const string LogicalName1 = "logicalname";
			public const string Name = "name";
			public const string ObjectTypeCode = "objecttypecode";
			public const string OriginalLocalizedCollectionName = "originallocalizedcollectionname";
			public const string OriginalLocalizedName = "originallocalizedname";
			public const string OverwriteTime = "overwritetime";
			public const string ParentControllingAttributeName = "parentcontrollingattributename";
			public const string PhysicalName = "physicalname";
			public const string ReportViewName = "reportviewname";
			public const string SolutionId = "solutionid";
			public const string VersionNumber = "versionnumber";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public Entity_Ent() : 
				base(EntityLogicalName)
		{
		}
		
		public const string AlternateKeys = "componentstate,name,overwritetime";
		
		public const string EntityLogicalName = "entity";
		
		public const string EntitySchemaName = "Entity";
		
		public const string PrimaryIdAttribute = "entityid";
		
		public const string PrimaryNameAttribute = "name";
		
		public const string EntityLogicalCollectionName = "entities";
		
		public const string EntitySetName = "entities";
		
		public const int EntityTypeCode = 9800;
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// The address table name of this entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("addresstablename")]
		public string AddressTableName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("addresstablename");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("AddressTableName");
				this.SetAttributeValue("addresstablename", value);
				this.OnPropertyChanged("AddressTableName");
			}
		}
		
		/// <summary>
		/// The base table name of this entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("basetablename")]
		public string BaseTableName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("basetablename");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("BaseTableName");
				this.SetAttributeValue("basetablename", value);
				this.OnPropertyChanged("BaseTableName");
			}
		}
		
		/// <summary>
		/// The collection name of this entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("collectionname")]
		public string CollectionName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("collectionname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CollectionName");
				this.SetAttributeValue("collectionname", value);
				this.OnPropertyChanged("CollectionName");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("componentstate")]
		public virtual ComponentState? ComponentState
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((ComponentState?)(EntityOptionSetEnum.GetEnum(this, "componentstate")));
			}
		}
		
		/// <summary>
		/// Unique identifier of the entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityid")]
		public System.Nullable<System.Guid> EntityId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("entityid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("EntityId");
				this.SetAttributeValue("entityid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("EntityId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entityid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.EntityId = value;
			}
		}
		
		/// <summary>
		/// The entity set name of this entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("entitysetname")]
		public string EntitySetName1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("entitysetname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("EntitySetName1");
				this.SetAttributeValue("entitysetname", value);
				this.OnPropertyChanged("EntitySetName1");
			}
		}
		
		/// <summary>
		/// The extension table name of this entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("extensiontablename")]
		public string ExtensionTableName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("extensiontablename");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ExtensionTableName");
				this.SetAttributeValue("extensiontablename", value);
				this.OnPropertyChanged("ExtensionTableName");
			}
		}
		
		/// <summary>
		/// The external collection name of this entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("externalcollectionname")]
		public string ExternalCollectionName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("externalcollectionname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ExternalCollectionName");
				this.SetAttributeValue("externalcollectionname", value);
				this.OnPropertyChanged("ExternalCollectionName");
			}
		}
		
		/// <summary>
		/// The external name of this entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("externalname")]
		public string ExternalName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("externalname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ExternalName");
				this.SetAttributeValue("externalname", value);
				this.OnPropertyChanged("ExternalName");
			}
		}
		
		/// <summary>
		/// Whether this entity is of type activity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("isactivity")]
		public System.Nullable<bool> IsActivity
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("isactivity");
			}
		}
		
		/// <summary>
		/// The logical collection name of this entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("logicalcollectionname")]
		public string LogicalCollectionName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("logicalcollectionname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("LogicalCollectionName");
				this.SetAttributeValue("logicalcollectionname", value);
				this.OnPropertyChanged("LogicalCollectionName");
			}
		}
		
		/// <summary>
		/// The logical name of this entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("logicalname")]
		public string LogicalName1
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("logicalname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("LogicalName1");
				this.SetAttributeValue("logicalname", value);
				this.OnPropertyChanged("LogicalName1");
			}
		}
		
		/// <summary>
		/// The name of this Entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string Name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Name");
				this.SetAttributeValue("name", value);
				this.OnPropertyChanged("Name");
			}
		}
		
		/// <summary>
		/// The object type code of this entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("objecttypecode")]
		public System.Nullable<int> ObjectTypeCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("objecttypecode");
			}
		}
		
		/// <summary>
		/// The original localized collection name of this entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("originallocalizedcollectionname")]
		public string OriginalLocalizedCollectionName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("originallocalizedcollectionname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OriginalLocalizedCollectionName");
				this.SetAttributeValue("originallocalizedcollectionname", value);
				this.OnPropertyChanged("OriginalLocalizedCollectionName");
			}
		}
		
		/// <summary>
		/// The original localized name of this entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("originallocalizedname")]
		public string OriginalLocalizedName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("originallocalizedname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OriginalLocalizedName");
				this.SetAttributeValue("originallocalizedname", value);
				this.OnPropertyChanged("OriginalLocalizedName");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overwritetime")]
		public System.Nullable<System.DateTime> OverwriteTime
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overwritetime");
			}
		}
		
		/// <summary>
		/// The parent controlling attribute name of this entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentcontrollingattributename")]
		public string ParentControllingAttributeName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("parentcontrollingattributename");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ParentControllingAttributeName");
				this.SetAttributeValue("parentcontrollingattributename", value);
				this.OnPropertyChanged("ParentControllingAttributeName");
			}
		}
		
		/// <summary>
		/// The physical name of this entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("physicalname")]
		public string PhysicalName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("physicalname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("PhysicalName");
				this.SetAttributeValue("physicalname", value);
				this.OnPropertyChanged("PhysicalName");
			}
		}
		
		/// <summary>
		/// The Report view name of this entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("reportviewname")]
		public string ReportViewName
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("reportviewname");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ReportViewName");
				this.SetAttributeValue("reportviewname", value);
				this.OnPropertyChanged("ReportViewName");
			}
		}
		
		/// <summary>
		/// Unique identifier of the associated solution.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("solutionid")]
		public System.Nullable<System.Guid> SolutionId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("solutionid");
			}
		}
		
		/// <summary>
		/// The version number of this entity.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N catalogassignment_entity
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("catalogassignment_entity")]
		public System.Collections.Generic.IEnumerable<CrmEarlyBound.CatalogAssignment> catalogassignment_entity
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<CrmEarlyBound.CatalogAssignment>("catalogassignment_entity", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("catalogassignment_entity");
				this.SetRelatedEntities<CrmEarlyBound.CatalogAssignment>("catalogassignment_entity", null, value);
				this.OnPropertyChanged("catalogassignment_entity");
			}
		}
		
		/// <summary>
		/// 1:N entity_appaction_ContextEntity
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entity_appaction_ContextEntity")]
		public System.Collections.Generic.IEnumerable<CrmEarlyBound.appaction> entity_appaction_ContextEntity
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<CrmEarlyBound.appaction>("entity_appaction_ContextEntity", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("entity_appaction_ContextEntity");
				this.SetRelatedEntities<CrmEarlyBound.appaction>("entity_appaction_ContextEntity", null, value);
				this.OnPropertyChanged("entity_appaction_ContextEntity");
			}
		}
		
		/// <summary>
		/// 1:N entity_appactionrule_ContextEntity
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entity_appactionrule_ContextEntity")]
		public System.Collections.Generic.IEnumerable<CrmEarlyBound.appactionrule> entity_appactionrule_ContextEntity
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<CrmEarlyBound.appactionrule>("entity_appactionrule_ContextEntity", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("entity_appactionrule_ContextEntity");
				this.SetRelatedEntities<CrmEarlyBound.appactionrule>("entity_appactionrule_ContextEntity", null, value);
				this.OnPropertyChanged("entity_appactionrule_ContextEntity");
			}
		}
		
		/// <summary>
		/// 1:N entity_entityanalyticsconfig
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entity_entityanalyticsconfig")]
		public System.Collections.Generic.IEnumerable<CrmEarlyBound.EntityAnalyticsConfig> entity_entityanalyticsconfig
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<CrmEarlyBound.EntityAnalyticsConfig>("entity_entityanalyticsconfig", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("entity_entityanalyticsconfig");
				this.SetRelatedEntities<CrmEarlyBound.EntityAnalyticsConfig>("entity_entityanalyticsconfig", null, value);
				this.OnPropertyChanged("entity_entityanalyticsconfig");
			}
		}
		
		/// <summary>
		/// 1:N entity_serviceplanmapping
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entity_serviceplanmapping")]
		public System.Collections.Generic.IEnumerable<CrmEarlyBound.ServicePlanMapping> entity_serviceplanmapping
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<CrmEarlyBound.ServicePlanMapping>("entity_serviceplanmapping", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("entity_serviceplanmapping");
				this.SetRelatedEntities<CrmEarlyBound.ServicePlanMapping>("entity_serviceplanmapping", null, value);
				this.OnPropertyChanged("entity_serviceplanmapping");
			}
		}
		
		/// <summary>
		/// 1:N entity_solutioncomponentbatchconfiguration_PrimaryEntity
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entity_solutioncomponentbatchconfiguration_PrimaryEntity")]
		public System.Collections.Generic.IEnumerable<CrmEarlyBound.solutioncomponentbatchconfiguration> entity_solutioncomponentbatchconfiguration_PrimaryEntity
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<CrmEarlyBound.solutioncomponentbatchconfiguration>("entity_solutioncomponentbatchconfiguration_PrimaryEntity", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("entity_solutioncomponentbatchconfiguration_PrimaryEntity");
				this.SetRelatedEntities<CrmEarlyBound.solutioncomponentbatchconfiguration>("entity_solutioncomponentbatchconfiguration_PrimaryEntity", null, value);
				this.OnPropertyChanged("entity_solutioncomponentbatchconfiguration_PrimaryEntity");
			}
		}
		
		/// <summary>
		/// 1:N entity_solutioncomponentbatchconfiguration_RelatedEntity
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entity_solutioncomponentbatchconfiguration_RelatedEntity")]
		public System.Collections.Generic.IEnumerable<CrmEarlyBound.solutioncomponentbatchconfiguration> entity_solutioncomponentbatchconfiguration_RelatedEntity
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<CrmEarlyBound.solutioncomponentbatchconfiguration>("entity_solutioncomponentbatchconfiguration_RelatedEntity", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("entity_solutioncomponentbatchconfiguration_RelatedEntity");
				this.SetRelatedEntities<CrmEarlyBound.solutioncomponentbatchconfiguration>("entity_solutioncomponentbatchconfiguration_RelatedEntity", null, value);
				this.OnPropertyChanged("entity_solutioncomponentbatchconfiguration_RelatedEntity");
			}
		}
		
		/// <summary>
		/// 1:N entity_solutioncomponentconfiguration
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("entity_solutioncomponentconfiguration")]
		public System.Collections.Generic.IEnumerable<CrmEarlyBound.solutioncomponentconfiguration> entity_solutioncomponentconfiguration
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<CrmEarlyBound.solutioncomponentconfiguration>("entity_solutioncomponentconfiguration", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("entity_solutioncomponentconfiguration");
				this.SetRelatedEntities<CrmEarlyBound.solutioncomponentconfiguration>("entity_solutioncomponentconfiguration", null, value);
				this.OnPropertyChanged("entity_solutioncomponentconfiguration");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_entity_msdyn_entitylinkchatconfiguration
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_entity_msdyn_entitylinkchatconfiguration")]
		public System.Collections.Generic.IEnumerable<CrmEarlyBound.msdyn_entitylinkchatconfiguration> msdyn_entity_msdyn_entitylinkchatconfiguration
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<CrmEarlyBound.msdyn_entitylinkchatconfiguration>("msdyn_entity_msdyn_entitylinkchatconfiguration", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_entity_msdyn_entitylinkchatconfiguration");
				this.SetRelatedEntities<CrmEarlyBound.msdyn_entitylinkchatconfiguration>("msdyn_entity_msdyn_entitylinkchatconfiguration", null, value);
				this.OnPropertyChanged("msdyn_entity_msdyn_entitylinkchatconfiguration");
			}
		}
		
		/// <summary>
		/// 1:N msdyn_insightsstorevirtualentity_extensionofrecordid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("msdyn_insightsstorevirtualentity_extensionofrecordid")]
		public System.Collections.Generic.IEnumerable<CrmEarlyBound.msdyn_InsightsStoreVirtualEntity> msdyn_insightsstorevirtualentity_extensionofrecordid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<CrmEarlyBound.msdyn_InsightsStoreVirtualEntity>("msdyn_insightsstorevirtualentity_extensionofrecordid", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("msdyn_insightsstorevirtualentity_extensionofrecordid");
				this.SetRelatedEntities<CrmEarlyBound.msdyn_InsightsStoreVirtualEntity>("msdyn_insightsstorevirtualentity_extensionofrecordid", null, value);
				this.OnPropertyChanged("msdyn_insightsstorevirtualentity_extensionofrecordid");
			}
		}
		
		/// <summary>
		/// 1:N privilegesremovalsetting_extensionofrecordid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("privilegesremovalsetting_extensionofrecordid")]
		public System.Collections.Generic.IEnumerable<CrmEarlyBound.PrivilegesRemovalSetting> privilegesremovalsetting_extensionofrecordid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<CrmEarlyBound.PrivilegesRemovalSetting>("privilegesremovalsetting_extensionofrecordid", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("privilegesremovalsetting_extensionofrecordid");
				this.SetRelatedEntities<CrmEarlyBound.PrivilegesRemovalSetting>("privilegesremovalsetting_extensionofrecordid", null, value);
				this.OnPropertyChanged("privilegesremovalsetting_extensionofrecordid");
			}
		}
		
		/// <summary>
		/// 1:N sharedlinksetting_extensionofrecordid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("sharedlinksetting_extensionofrecordid")]
		public System.Collections.Generic.IEnumerable<CrmEarlyBound.SharedLinkSetting> sharedlinksetting_extensionofrecordid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<CrmEarlyBound.SharedLinkSetting>("sharedlinksetting_extensionofrecordid", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("sharedlinksetting_extensionofrecordid");
				this.SetRelatedEntities<CrmEarlyBound.SharedLinkSetting>("sharedlinksetting_extensionofrecordid", null, value);
				this.OnPropertyChanged("sharedlinksetting_extensionofrecordid");
			}
		}
		
		/// <summary>
		/// 1:N virtualentitymetadata_extensionofrecordid
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("virtualentitymetadata_extensionofrecordid")]
		public System.Collections.Generic.IEnumerable<CrmEarlyBound.VirtualEntityMetadata> virtualentitymetadata_extensionofrecordid
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<CrmEarlyBound.VirtualEntityMetadata>("virtualentitymetadata_extensionofrecordid", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("virtualentitymetadata_extensionofrecordid");
				this.SetRelatedEntities<CrmEarlyBound.VirtualEntityMetadata>("virtualentitymetadata_extensionofrecordid", null, value);
				this.OnPropertyChanged("virtualentitymetadata_extensionofrecordid");
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public Entity_Ent(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["entityid"] = base.Id;
                        break;
                    case "entityid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}