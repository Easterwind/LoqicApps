//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace CrmEarlyBound
{
	
	[System.Runtime.Serialization.DataContractAttribute()]
	public enum CommentState
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// A collaborative comment on a maker artifact
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("comment")]
	public partial class Comment : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public static class Fields
		{
			public const string Anchor = "anchor";
			public const string ArtifactId = "artifactid";
			public const string ArtifactType = "artifacttype";
			public const string Body = "body";
			public const string CommentId = "commentid";
			public const string Id = "commentid";
			public const string Container = "container";
			public const string CreatedBy = "createdby";
			public const string CreatedOn = "createdon";
			public const string CreatedOnBehalfBy = "createdonbehalfby";
			public const string ImportSequenceNumber = "importsequencenumber";
			public const string Kind = "kind";
			public const string ModifiedBy = "modifiedby";
			public const string ModifiedOn = "modifiedon";
			public const string ModifiedOnBehalfBy = "modifiedonbehalfby";
			public const string Name = "name";
			public const string OverriddenCreatedOn = "overriddencreatedon";
			public const string OwnerId = "ownerid";
			public const string OwningBusinessUnit = "owningbusinessunit";
			public const string OwningTeam = "owningteam";
			public const string OwningUser = "owninguser";
			public const string Parent = "parent";
			public const string State = "state";
			public const string StateCode = "statecode";
			public const string StatusCode = "statuscode";
			public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
			public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
			public const string VersionNumber = "versionnumber";
			public const string business_unit_comment = "business_unit_comment";
			public const string Comment_Artifact_AppModule = "Comment_Artifact_AppModule";
			public const string Comment_Artifact_Bot = "Comment_Artifact_Bot";
			public const string Comment_Artifact_BotComponent = "Comment_Artifact_BotComponent";
			public const string Comment_Artifact_CanvasApp = "Comment_Artifact_CanvasApp";
			public const string Comment_Artifact_Workflow = "Comment_Artifact_Workflow";
			public const string ReferencingComment_Container_Comment = "Comment_Container_Comment";
			public const string ReferencingComment_Parent_Comment = "Comment_Parent_Comment";
			public const string lk_comment_createdby = "lk_comment_createdby";
			public const string lk_comment_createdonbehalfby = "lk_comment_createdonbehalfby";
			public const string lk_comment_modifiedby = "lk_comment_modifiedby";
			public const string lk_comment_modifiedonbehalfby = "lk_comment_modifiedonbehalfby";
			public const string owner_comment = "owner_comment";
			public const string team_comment = "team_comment";
			public const string user_comment = "user_comment";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public Comment() : 
				base(EntityLogicalName)
		{
		}
		
		public const string AlternateKeys = "artifactid,artifacttype";
		
		public const string EntityLogicalName = "comment";
		
		public const string EntitySchemaName = "Comment";
		
		public const string PrimaryIdAttribute = "commentid";
		
		public const string PrimaryNameAttribute = "name";
		
		public const string EntityLogicalCollectionName = "comments";
		
		public const string EntitySetName = "comments";
		
		public const int EntityTypeCode = 10089;
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		[System.Diagnostics.DebuggerNonUserCode()]
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Anchor context for the record within the maker artifact
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("anchor")]
		public string Anchor
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("anchor");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Anchor");
				this.SetAttributeValue("anchor", value);
				this.OnPropertyChanged("Anchor");
			}
		}
		
		/// <summary>
		/// Unique identifier of the maker artifact
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("artifactid")]
		public string ArtifactId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("artifactid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ArtifactId");
				this.SetAttributeValue("artifactid", value);
				this.OnPropertyChanged("ArtifactId");
			}
		}
		
		/// <summary>
		/// Type of the maker artifact
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("artifacttype")]
		public virtual Comment_ArtifactType? ArtifactType
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Comment_ArtifactType?)(EntityOptionSetEnum.GetEnum(this, "artifacttype")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ArtifactType");
				this.SetAttributeValue("artifacttype", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("ArtifactType");
			}
		}
		
		/// <summary>
		/// Body content for the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("body")]
		public string Body
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("body");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Body");
				this.SetAttributeValue("body", value);
				this.OnPropertyChanged("Body");
			}
		}
		
		/// <summary>
		/// Unique identifier for entity instances
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("commentid")]
		public System.Nullable<System.Guid> CommentId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("commentid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CommentId");
				this.SetAttributeValue("commentid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("CommentId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("commentid")]
		public override System.Guid Id
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return base.Id;
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.CommentId = value;
			}
		}
		
		/// <summary>
		/// Unique identifier for the container of this record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("container")]
		public Microsoft.Xrm.Sdk.EntityReference Container
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("container");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Container");
				this.SetAttributeValue("container", value);
				this.OnPropertyChanged("Container");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("CreatedOnBehalfBy");
				this.SetAttributeValue("createdonbehalfby", value);
				this.OnPropertyChanged("CreatedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Sequence number of the import that created this record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("importsequencenumber")]
		public System.Nullable<int> ImportSequenceNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("importsequencenumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ImportSequenceNumber");
				this.SetAttributeValue("importsequencenumber", value);
				this.OnPropertyChanged("ImportSequenceNumber");
			}
		}
		
		/// <summary>
		/// Kind of record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("kind")]
		public virtual Comment_Kind? Kind
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Comment_Kind?)(EntityOptionSetEnum.GetEnum(this, "kind")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Kind");
				this.SetAttributeValue("kind", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("Kind");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Date and time when the record was modified.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Unique identifier of the delegate user who modified the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ModifiedOnBehalfBy");
				this.SetAttributeValue("modifiedonbehalfby", value);
				this.OnPropertyChanged("ModifiedOnBehalfBy");
			}
		}
		
		/// <summary>
		/// Required name field
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string Name
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Name");
				this.SetAttributeValue("name", value);
				this.OnPropertyChanged("Name");
			}
		}
		
		/// <summary>
		/// Date and time that the record was migrated.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("overriddencreatedon")]
		public System.Nullable<System.DateTime> OverriddenCreatedOn
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("overriddencreatedon");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OverriddenCreatedOn");
				this.SetAttributeValue("overriddencreatedon", value);
				this.OnPropertyChanged("OverriddenCreatedOn");
			}
		}
		
		/// <summary>
		/// Owner Id
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("OwnerId");
				this.SetAttributeValue("ownerid", value);
				this.OnPropertyChanged("OwnerId");
			}
		}
		
		/// <summary>
		/// Unique identifier for the business unit that owns the record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier for the team that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier for the user that owns the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Unique identifier for the parent of this record
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parent")]
		public Microsoft.Xrm.Sdk.EntityReference Parent
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("parent");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Parent");
				this.SetAttributeValue("parent", value);
				this.OnPropertyChanged("Parent");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("state")]
		public virtual Comment_State? State
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Comment_State?)(EntityOptionSetEnum.GetEnum(this, "state")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("State");
				this.SetAttributeValue("state", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("State");
			}
		}
		
		/// <summary>
		/// Status of the Comment
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public System.Nullable<CrmEarlyBound.CommentState> StateCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				Microsoft.Xrm.Sdk.OptionSetValue optionSet = this.GetAttributeValue<Microsoft.Xrm.Sdk.OptionSetValue>("statecode");
				if ((optionSet != null))
				{
					return ((CrmEarlyBound.CommentState)(System.Enum.ToObject(typeof(CrmEarlyBound.CommentState), optionSet.Value)));
				}
				else
				{
					return null;
				}
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StateCode");
				if ((value == null))
				{
					this.SetAttributeValue("statecode", null);
				}
				else
				{
					this.SetAttributeValue("statecode", new Microsoft.Xrm.Sdk.OptionSetValue(((int)(value))));
				}
				this.OnPropertyChanged("StateCode");
			}
		}
		
		/// <summary>
		/// Reason for the status of the Comment
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual Comment_StatusCode? StatusCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return ((Comment_StatusCode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("timezoneruleversionnumber")]
		public System.Nullable<int> TimeZoneRuleVersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("timezoneruleversionnumber");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("TimeZoneRuleVersionNumber");
				this.SetAttributeValue("timezoneruleversionnumber", value);
				this.OnPropertyChanged("TimeZoneRuleVersionNumber");
			}
		}
		
		/// <summary>
		/// Time zone code that was in use when the record was created.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("utcconversiontimezonecode")]
		public System.Nullable<int> UTCConversionTimeZoneCode
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("utcconversiontimezonecode");
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("UTCConversionTimeZoneCode");
				this.SetAttributeValue("utcconversiontimezonecode", value);
				this.OnPropertyChanged("UTCConversionTimeZoneCode");
			}
		}
		
		/// <summary>
		/// Version Number
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
		
		/// <summary>
		/// 1:N comment_AsyncOperations
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("comment_AsyncOperations")]
		public System.Collections.Generic.IEnumerable<CrmEarlyBound.AsyncOperation> comment_AsyncOperations
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<CrmEarlyBound.AsyncOperation>("comment_AsyncOperations", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("comment_AsyncOperations");
				this.SetRelatedEntities<CrmEarlyBound.AsyncOperation>("comment_AsyncOperations", null, value);
				this.OnPropertyChanged("comment_AsyncOperations");
			}
		}
		
		/// <summary>
		/// 1:N comment_BulkDeleteFailures
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("comment_BulkDeleteFailures")]
		public System.Collections.Generic.IEnumerable<CrmEarlyBound.BulkDeleteFailure> comment_BulkDeleteFailures
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<CrmEarlyBound.BulkDeleteFailure>("comment_BulkDeleteFailures", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("comment_BulkDeleteFailures");
				this.SetRelatedEntities<CrmEarlyBound.BulkDeleteFailure>("comment_BulkDeleteFailures", null, value);
				this.OnPropertyChanged("comment_BulkDeleteFailures");
			}
		}
		
		/// <summary>
		/// 1:N Comment_Container_Comment
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Comment_Container_Comment", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<CrmEarlyBound.Comment> ReferencedComment_Container_Comment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<CrmEarlyBound.Comment>("Comment_Container_Comment", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ReferencedComment_Container_Comment");
				this.SetRelatedEntities<CrmEarlyBound.Comment>("Comment_Container_Comment", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
				this.OnPropertyChanged("ReferencedComment_Container_Comment");
			}
		}
		
		/// <summary>
		/// 1:N comment_MailboxTrackingFolders
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("comment_MailboxTrackingFolders")]
		public System.Collections.Generic.IEnumerable<CrmEarlyBound.MailboxTrackingFolder> comment_MailboxTrackingFolders
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<CrmEarlyBound.MailboxTrackingFolder>("comment_MailboxTrackingFolders", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("comment_MailboxTrackingFolders");
				this.SetRelatedEntities<CrmEarlyBound.MailboxTrackingFolder>("comment_MailboxTrackingFolders", null, value);
				this.OnPropertyChanged("comment_MailboxTrackingFolders");
			}
		}
		
		/// <summary>
		/// 1:N Comment_Parent_Comment
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Comment_Parent_Comment", Microsoft.Xrm.Sdk.EntityRole.Referenced)]
		public System.Collections.Generic.IEnumerable<CrmEarlyBound.Comment> ReferencedComment_Parent_Comment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<CrmEarlyBound.Comment>("Comment_Parent_Comment", Microsoft.Xrm.Sdk.EntityRole.Referenced);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ReferencedComment_Parent_Comment");
				this.SetRelatedEntities<CrmEarlyBound.Comment>("Comment_Parent_Comment", Microsoft.Xrm.Sdk.EntityRole.Referenced, value);
				this.OnPropertyChanged("ReferencedComment_Parent_Comment");
			}
		}
		
		/// <summary>
		/// 1:N comment_PrincipalObjectAttributeAccesses
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("comment_PrincipalObjectAttributeAccesses")]
		public System.Collections.Generic.IEnumerable<CrmEarlyBound.PrincipalObjectAttributeAccess> comment_PrincipalObjectAttributeAccesses
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<CrmEarlyBound.PrincipalObjectAttributeAccess>("comment_PrincipalObjectAttributeAccesses", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("comment_PrincipalObjectAttributeAccesses");
				this.SetRelatedEntities<CrmEarlyBound.PrincipalObjectAttributeAccess>("comment_PrincipalObjectAttributeAccesses", null, value);
				this.OnPropertyChanged("comment_PrincipalObjectAttributeAccesses");
			}
		}
		
		/// <summary>
		/// 1:N comment_ProcessSession
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("comment_ProcessSession")]
		public System.Collections.Generic.IEnumerable<CrmEarlyBound.ProcessSession> comment_ProcessSession
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<CrmEarlyBound.ProcessSession>("comment_ProcessSession", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("comment_ProcessSession");
				this.SetRelatedEntities<CrmEarlyBound.ProcessSession>("comment_ProcessSession", null, value);
				this.OnPropertyChanged("comment_ProcessSession");
			}
		}
		
		/// <summary>
		/// 1:N comment_SyncErrors
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("comment_SyncErrors")]
		public System.Collections.Generic.IEnumerable<CrmEarlyBound.SyncError> comment_SyncErrors
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<CrmEarlyBound.SyncError>("comment_SyncErrors", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("comment_SyncErrors");
				this.SetRelatedEntities<CrmEarlyBound.SyncError>("comment_SyncErrors", null, value);
				this.OnPropertyChanged("comment_SyncErrors");
			}
		}
		
		/// <summary>
		/// 1:N comment_UserEntityInstanceDatas
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("comment_UserEntityInstanceDatas")]
		public System.Collections.Generic.IEnumerable<CrmEarlyBound.UserEntityInstanceData> comment_UserEntityInstanceDatas
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntities<CrmEarlyBound.UserEntityInstanceData>("comment_UserEntityInstanceDatas", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("comment_UserEntityInstanceDatas");
				this.SetRelatedEntities<CrmEarlyBound.UserEntityInstanceData>("comment_UserEntityInstanceDatas", null, value);
				this.OnPropertyChanged("comment_UserEntityInstanceDatas");
			}
		}
		
		/// <summary>
		/// N:1 business_unit_comment
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("business_unit_comment")]
		public CrmEarlyBound.BusinessUnit business_unit_comment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<CrmEarlyBound.BusinessUnit>("business_unit_comment", null);
			}
		}
		
		/// <summary>
		/// N:1 Comment_Artifact_AppModule
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parent")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Comment_Artifact_AppModule")]
		public CrmEarlyBound.AppModule Comment_Artifact_AppModule
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<CrmEarlyBound.AppModule>("Comment_Artifact_AppModule", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Comment_Artifact_AppModule");
				this.SetRelatedEntity<CrmEarlyBound.AppModule>("Comment_Artifact_AppModule", null, value);
				this.OnPropertyChanged("Comment_Artifact_AppModule");
			}
		}
		
		/// <summary>
		/// N:1 Comment_Artifact_Bot
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parent")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Comment_Artifact_Bot")]
		public CrmEarlyBound.bot Comment_Artifact_Bot
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<CrmEarlyBound.bot>("Comment_Artifact_Bot", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Comment_Artifact_Bot");
				this.SetRelatedEntity<CrmEarlyBound.bot>("Comment_Artifact_Bot", null, value);
				this.OnPropertyChanged("Comment_Artifact_Bot");
			}
		}
		
		/// <summary>
		/// N:1 Comment_Artifact_BotComponent
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parent")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Comment_Artifact_BotComponent")]
		public CrmEarlyBound.botcomponent Comment_Artifact_BotComponent
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<CrmEarlyBound.botcomponent>("Comment_Artifact_BotComponent", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Comment_Artifact_BotComponent");
				this.SetRelatedEntity<CrmEarlyBound.botcomponent>("Comment_Artifact_BotComponent", null, value);
				this.OnPropertyChanged("Comment_Artifact_BotComponent");
			}
		}
		
		/// <summary>
		/// N:1 Comment_Artifact_CanvasApp
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parent")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Comment_Artifact_CanvasApp")]
		public CrmEarlyBound.CanvasApp Comment_Artifact_CanvasApp
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<CrmEarlyBound.CanvasApp>("Comment_Artifact_CanvasApp", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Comment_Artifact_CanvasApp");
				this.SetRelatedEntity<CrmEarlyBound.CanvasApp>("Comment_Artifact_CanvasApp", null, value);
				this.OnPropertyChanged("Comment_Artifact_CanvasApp");
			}
		}
		
		/// <summary>
		/// N:1 Comment_Artifact_Workflow
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parent")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Comment_Artifact_Workflow")]
		public CrmEarlyBound.Workflow Comment_Artifact_Workflow
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<CrmEarlyBound.Workflow>("Comment_Artifact_Workflow", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("Comment_Artifact_Workflow");
				this.SetRelatedEntity<CrmEarlyBound.Workflow>("Comment_Artifact_Workflow", null, value);
				this.OnPropertyChanged("Comment_Artifact_Workflow");
			}
		}
		
		/// <summary>
		/// N:1 Comment_Container_Comment
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("container")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Comment_Container_Comment", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public CrmEarlyBound.Comment ReferencingComment_Container_Comment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<CrmEarlyBound.Comment>("Comment_Container_Comment", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ReferencingComment_Container_Comment");
				this.SetRelatedEntity<CrmEarlyBound.Comment>("Comment_Container_Comment", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
				this.OnPropertyChanged("ReferencingComment_Container_Comment");
			}
		}
		
		/// <summary>
		/// N:1 Comment_Parent_Comment
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parent")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("Comment_Parent_Comment", Microsoft.Xrm.Sdk.EntityRole.Referencing)]
		public CrmEarlyBound.Comment ReferencingComment_Parent_Comment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<CrmEarlyBound.Comment>("Comment_Parent_Comment", Microsoft.Xrm.Sdk.EntityRole.Referencing);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("ReferencingComment_Parent_Comment");
				this.SetRelatedEntity<CrmEarlyBound.Comment>("Comment_Parent_Comment", Microsoft.Xrm.Sdk.EntityRole.Referencing, value);
				this.OnPropertyChanged("ReferencingComment_Parent_Comment");
			}
		}
		
		/// <summary>
		/// N:1 lk_comment_createdby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_comment_createdby")]
		public CrmEarlyBound.SystemUser lk_comment_createdby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<CrmEarlyBound.SystemUser>("lk_comment_createdby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_comment_createdonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_comment_createdonbehalfby")]
		public CrmEarlyBound.SystemUser lk_comment_createdonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<CrmEarlyBound.SystemUser>("lk_comment_createdonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_comment_createdonbehalfby");
				this.SetRelatedEntity<CrmEarlyBound.SystemUser>("lk_comment_createdonbehalfby", null, value);
				this.OnPropertyChanged("lk_comment_createdonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 lk_comment_modifiedby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_comment_modifiedby")]
		public CrmEarlyBound.SystemUser lk_comment_modifiedby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<CrmEarlyBound.SystemUser>("lk_comment_modifiedby", null);
			}
		}
		
		/// <summary>
		/// N:1 lk_comment_modifiedonbehalfby
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("lk_comment_modifiedonbehalfby")]
		public CrmEarlyBound.SystemUser lk_comment_modifiedonbehalfby
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<CrmEarlyBound.SystemUser>("lk_comment_modifiedonbehalfby", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("lk_comment_modifiedonbehalfby");
				this.SetRelatedEntity<CrmEarlyBound.SystemUser>("lk_comment_modifiedonbehalfby", null, value);
				this.OnPropertyChanged("lk_comment_modifiedonbehalfby");
			}
		}
		
		/// <summary>
		/// N:1 owner_comment
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("owner_comment")]
		public CrmEarlyBound.Owner owner_comment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<CrmEarlyBound.Owner>("owner_comment", null);
			}
			[System.Diagnostics.DebuggerNonUserCode()]
			set
			{
				this.OnPropertyChanging("owner_comment");
				this.SetRelatedEntity<CrmEarlyBound.Owner>("owner_comment", null, value);
				this.OnPropertyChanged("owner_comment");
			}
		}
		
		/// <summary>
		/// N:1 team_comment
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("team_comment")]
		public CrmEarlyBound.Team team_comment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<CrmEarlyBound.Team>("team_comment", null);
			}
		}
		
		/// <summary>
		/// N:1 user_comment
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("user_comment")]
		public CrmEarlyBound.SystemUser user_comment
		{
			[System.Diagnostics.DebuggerNonUserCode()]
			get
			{
				return this.GetRelatedEntity<CrmEarlyBound.SystemUser>("user_comment", null);
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		[System.Diagnostics.DebuggerNonUserCode()]
		public Comment(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["commentid"] = base.Id;
                        break;
                    case "commentid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}